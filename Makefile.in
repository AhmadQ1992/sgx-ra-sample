SGX_ENCLAVES:=@SGX_ENCLAVES@

CC=@CC@
# Define ENCLAVE_LIBDIR to hardcode the library path that enclaves 
# are loaded from. Otherwise, create_enclave will search in the
# programs current working directory.
#CFLAGS=@CFLAGS@ -fno-builtin-memset
CFLAGS=@CFLAGS@ -fno-builtin-memset -mrdrnd
CPPFLAGS=@CPPFLAGS@
LDFLAGS=@LDFLAGS@ -L$(SGXSDK_LIBDIR)
LIBS_HW_SIM=@LIBS_HW_SIMU@ 
LIBS=@LIBS@ $(LIBS_HW_SIM) -lsgx_ukey_exchange -l$(SGX_UAE_SERVICE_LIB) -l$(SGX_URTS_LIB) -lpthread

INSTALL=@INSTALL@
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
libdir=@libdir@
srcdir=@srcdir@
enclave_libdir=@enclave_libdir@

COMMON_OBJS=hexutil.o fileio.o
QUOTE_OBJS=main.o sgx_stub.o sgx_detect_linux.o $(COMMON_OBJS)
SP_OBJS=sp.o eckey.o crypto_init.o $(COMMON_OBJS)

%.o: %.c
	$(CC) -c $(CPPFLAGS) $(CFLAGS) -I$(SGXSDK_INCDIR) $<

all: quote sp $(SGX_ENCLAVES) link

install: install-program install-enclaves

install-program: all 
	$(INSTALL) -d $(bindir)
	$(INSTALL) -t $(bindir) enclavereport

install-enclaves:
	for dir in $(SGX_ENCLAVES); do \
		$(MAKE) -C $$dir install; \
	done

include sgx_app.mk

quote: $(ENCLAVE_UOBJS) $(QUOTE_OBJS)
	g++ -o $@ $(LDFLAGS) $(QUOTE_OBJS) $(ENCLAVE_UOBJS) $(LIBS) -ldl -l:libsgx_capable.a

sp: $(SP_OBJS)
	$(CC) -o $@ $(SP_OBJS) -lcrypto

clean: clean_enclaves
	rm -f quote $(APP_OBJS) $(ENCLAVE_CLEAN) EnclaveQuote.signed.so

link: EnclaveQuote.signed.so quote

EnclaveQuote.signed.so:
	ln -s EnclaveQuote/EnclaveQuote.signed.so

distclean: clean distclean_enclaves
	rm -rf Makefile config.log config.status config.h autom4te.cache
	rm -rf sgx_app.mk sgx_enclave.mk 

